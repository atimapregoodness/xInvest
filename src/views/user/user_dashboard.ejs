<%- layout('layout/acctBoilerplate', { title: 'xInvest - Dashboard' }) %> <%-
partial("partials/floatingNav") %> <%- partial('partials/sideBar') %>

<div class="dashboard">
  <section id="section1">
    <div class="balance-card">
      <div class="balance-header">
        <h5>Total Balance</h5>
        <button class="toggle-balance" id="toggleBalance">
          <i class="fas fa-eye"></i>
        </button>
      </div>

      <div class="balance-amount" id="balanceAmount">
        $<%= wallet?.totalBalance?.toLocaleString() || '0.00' %>
      </div>

      <div class="balance-actions">
        <a href="/wallet/deposit" class="balance-btn">
          <i class="fas fa-arrow-down"></i>
          <span>Deposit</span>
        </a>
        <a href="/wallet/withdraw" class="balance-btn">
          <i class="fas fa-arrow-up"></i>
          <span>Withdraw</span>
        </a>
        <a href="/invest" class="balance-btn">
          <i class="fas fa-chart-line"></i>
          <span>Invest</span>
        </a>
      </div>

      <div class="asset-list-container">
        <div class="asset-list">
          <!-- BTC -->
          <div class="asset-item" data-symbol="BTC">
            <div class="asset-icon asset-btc">
              <i class="fab fa-bitcoin"></i>
            </div>
            <div class="asset-info">
              <div class="asset-name">Bitcoin</div>
              <div class="asset-symbol">BTC</div>
            </div>
            <div class="asset-holding" id="btc-holding">
              <%= wallet?.BTC?.toFixed(6) || '0.000000' %> BTC
            </div>
            <div class="asset-price" id="btc-price">$0.00</div>
            <div class="asset-value" id="btc-value">$0.00</div>
            <div class="asset-change" id="btc-change">0.00%</div>
          </div>

          <!-- ETH -->
          <div class="asset-item" data-symbol="ETH">
            <div class="asset-icon asset-eth">
              <i class="fab fa-ethereum"></i>
            </div>
            <div class="asset-info">
              <div class="asset-name">Ethereum</div>
              <div class="asset-symbol">ETH</div>
            </div>
            <div class="asset-holding" id="eth-holding">
              <%= wallet?.ETH?.toFixed(4) || '0.0000' %> ETH
            </div>
            <div class="asset-price" id="eth-price">$0.00</div>
            <div class="asset-value" id="eth-value">$0.00</div>
            <div class="asset-change" id="eth-change">0.00%</div>
          </div>

          <!-- USDT -->
          <div class="asset-item" data-symbol="USDT">
            <div class="asset-icon asset-usdt">
              <i class="fas fa-dollar-sign"></i>
            </div>
            <div class="asset-info">
              <div class="asset-name">Tether</div>
              <div class="asset-symbol">USDT</div>
            </div>
            <div class="asset-holding" id="usdt-holding">
              $<%= wallet?.USDT?.toLocaleString() || '0' %> USDT
            </div>
            <div class="asset-price" id="usdt-price">$1.00</div>
            <div class="asset-value" id="usdt-value">$0.00</div>
            <div class="asset-change" id="usdt-change">0.00%</div>
          </div>
        </div>
      </div>
    </div>
  </section>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Toggle balance visibility
    const toggleBtn = document.getElementById('toggleBalance');
    const balanceAmount = document.getElementById('balanceAmount');
    let isHidden = false;

    toggleBtn.addEventListener('click', () => {
      isHidden = !isHidden;
      if (isHidden) {
        balanceAmount.textContent = '******';
        toggleBtn.innerHTML = '<i class="fas fa-eye-slash"></i>';
      } else {
        balanceAmount.textContent = '$<%= wallet?.totalBalance?.toLocaleString() || "0.00" %>';
        toggleBtn.innerHTML = '<i class="fas fa-eye"></i>';
      }
    });

    // Get wallet data (JSON safe)
    const walletData = <%- JSON.stringify(wallet || {}) %>;

    // Auto-update every 30 seconds
    setInterval(updatePrices, 30000);

    // Initial load
    updatePrices();

    async function updatePrices() {
      try {
        const response = await fetch(
          'https://api.coingecko.com/api/v3/simple/price?ids=bitcoin,ethereum,tether&vs_currencies=usd&include_24hr_change=true'
        );

        if (!response.ok) throw new Error('API Error');

        const data = await response.json();

        // BTC
        const btcPrice = data.bitcoin.usd;
        const btcHolding = walletData.BTC || 0;
        document.getElementById('btc-price').textContent = `$${btcPrice.toLocaleString()}`;
        document.getElementById('btc-value').textContent = `$${(btcPrice * btcHolding).toLocaleString(undefined, {minimumFractionDigits: 2, maximumFractionDigits: 2})}`;

        const btcChange = document.getElementById('btc-change');
        const btcChangePercent = data.bitcoin.usd_24h_change;
        btcChange.textContent = `${btcChangePercent >= 0 ? '+' : ''}${btcChangePercent.toFixed(2)}%`;
        btcChange.className = `asset-change ${btcChangePercent >= 0 ? 'positive' : 'negative'}`;

        // ETH
        const ethPrice = data.ethereum.usd;
        const ethHolding = walletData.ETH || 0;
        document.getElementById('eth-price').textContent = `$${ethPrice.toLocaleString()}`;
        document.getElementById('eth-value').textContent = `$${(ethPrice * ethHolding).toLocaleString(undefined, {minimumFractionDigits: 2, maximumFractionDigits: 2})}`;

        const ethChange = document.getElementById('eth-change');
        const ethChangePercent = data.ethereum.usd_24h_change;
        ethChange.textContent = `${ethChangePercent >= 0 ? '+' : ''}${ethChangePercent.toFixed(2)}%`;
        ethChange.className = `asset-change ${ethChangePercent >= 0 ? 'positive' : 'negative'}`;

        // USDT
        const usdtPrice = data.tether.usd;
        const usdtHolding = walletData.USDT || 0;
        document.getElementById('usdt-price').textContent = `$${usdtPrice.toFixed(4)}`;
        document.getElementById('usdt-value').textContent = `$${usdtHolding.toLocaleString()}`;

        const usdtChange = document.getElementById('usdt-change');
        const usdtChangePercent = data.tether.usd_24h_change;
        usdtChange.textContent = `${usdtChangePercent >= 0 ? '+' : ''}${usdtChangePercent.toFixed(2)}%`;
        usdtChange.className = `asset-change ${usdtChangePercent >= 0 ? 'positive' : 'negative'}`;

        // Update total balance (sum of all values)
        const totalBalance = (btcPrice * btcHolding) + (ethPrice * ethHolding) + usdtHolding;
        if (!isHidden) {
          balanceAmount.textContent = `$${totalBalance.toLocaleString(undefined, {minimumFractionDigits: 2, maximumFractionDigits: 2})}`;
        }

      } catch (error) {
        console.error('Price update failed:', error);

        // Fallback static prices
        document.getElementById('btc-price').textContent = '$67,850';
        document.getElementById('eth-price').textContent = '$3,450';
        document.getElementById('usdt-price').textContent = '$1.0000';
      }
    }
  });
</script>
