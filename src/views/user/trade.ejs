<%- layout('layout/acctBoilerplate', { title: 'Finovex - My Trades' }) %> <%-
partial("partials/floatingNav") %> <%- partial("partials/sideBar") %>

<link rel="stylesheet" href="/css/trading.css" />

<div class="dashboard">
  <div class="dashboard-header glass-card">
    <div class="header-content">
      <div class="header-text">
        <h1>My Trades</h1>
        <p>View your active and completed trades</p>
      </div>
      <div class="stats-grid">
        <div class="stat-card">
          <div class="stat-value"><%= activeTrades || 0 %></div>
          <div class="stat-label">Active Trades</div>
        </div>
        <div class="stat-card">
          <div class="stat-value">
            $<%= totalInvestment?.toFixed(2) || '0.00' %>
          </div>
          <div class="stat-label">Investment</div>
        </div>
        <div class="stat-card">
          <div class="stat-value">
            $<%= totalProfit?.toFixed(2) || '0.00' %>
          </div>
          <div class="stat-label">Profit</div>
        </div>
        <div class="stat-card">
          <div class="stat-value" id="liveTrades">0</div>
          <div class="stat-label"><span class="live-indicator"></span>Live</div>
        </div>
      </div>
    </div>
  </div>

  <a
    href="/dashboard/trade/place"
    class="btn-primary"
    style="display: block; margin-bottom: 1rem"
    id="placeTrade"
  >
    <i class="fa fa-chart-line"></i> Place New Trade
  </a>

  <div class="active-trades-section glass-card" id="trades-grid">
    <div class="trades-header">
      <h2>My Trades</h2>
      <span class="update-time" id="lastUpdate">Updating...</span>
    </div>
    <div class="trades-grid" id="tradesGrid">
      <div class="no-trades">Loading trades...</div>
    </div>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const tradesGrid = document.getElementById("tradesGrid");
    const lastUpdate = document.getElementById("lastUpdate");
    const liveTrades = document.getElementById("liveTrades");

    // Random 24h change for display
    function simulate24hChange() {
      const change = (Math.random() * 6 - 3).toFixed(2); // -3% to +3%
      return {
        value: parseFloat(change),
        className: change >= 0 ? "profit-positive" : "profit-negative",
      };
    }

    async function loadTrades() {
      try {
        const res = await fetch("/dashboard/trade/status");
        const data = await res.json();
        if (!data.success) return;

        const trades = data.trades.map((t) => ({
          ...t,
          progress: Math.min(Math.max(t.progress, 0), 100),
        }));

        updateTradesGrid(trades);
        lastUpdate.textContent = new Date().toLocaleTimeString();
        liveTrades.textContent = trades.filter(
          (t) => t.status === "active"
        ).length;
      } catch (err) {
        console.error("Error loading trades:", err);
      }
    }

    function updateTradesGrid(trades) {
      if (!trades || trades.length === 0) {
        tradesGrid.innerHTML =
          '<div class="no-trades">No trades yet. Place your first trade.</div>';
        return;
      }

      tradesGrid.innerHTML = trades
        .map((trade) => {
          const profitClass =
            trade.currentProfit >= 0 ? "profit-positive" : "profit-negative";
          const profitSign = trade.currentProfit >= 0 ? "+" : "";
          const change24h = simulate24hChange();

          return `
      <div class="trade-card ${trade.status}">
        <div class="trade-header">
          <div class="trade-pair">${trade.tradingPair}</div>
          <div class="trade-status">${
            trade.status.charAt(0).toUpperCase() + trade.status.slice(1)
          }</div>
        </div>
        <div class="trade-stats">
          <div class="stat-item">
            <div class="stat-label-sm">Amount</div>
            <div class="stat-value-sm">${parseFloat(trade.amount).toFixed(6)} ${
            trade.currency
          }</div>
          </div>
          <div class="stat-item">
            <div class="stat-label-sm">Profit</div>
            <div class="stat-value-sm ${profitClass}">${profitSign}${parseFloat(
            trade.currentProfit
          ).toFixed(2)} ${trade.currency}</div>
          </div>
          <div class="stat-item">
            <div class="stat-label-sm">ROI</div>
            <div class="stat-value-sm">${trade.roi}%</div>
          </div>
          <div class="stat-item">
            <div class="stat-label-sm">24h Change</div>
            <div class="stat-value-sm ${change24h.className}">${
            change24h.value >= 0 ? "+" : ""
          }${change24h.value}%</div>
          </div>
        </div>
        <div class="progress-section">
          <div class="progress-info">
            <span>Progress</span>
            <span>${trade.progress}%</span>
          </div>
          <div class="progress-bar">
            <div class="progress-fill" style="width: ${trade.progress}%"></div>
          </div>
          <div class="progress-info">
            <span>Time Left</span>
            <span>${trade.daysRemaining || 0}d</span>
          </div>
        </div>
      </div>`;
        })
        .join("");
    }

    loadTrades();
    const interval = setInterval(loadTrades, 3000);
    window.addEventListener("beforeunload", () => clearInterval(interval));
  });
</script>
