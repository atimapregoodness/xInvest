<!-- FANCY PAGE LOADER - FULLSCREEN OVERLAY -->
<div id="pageLoader" class="page-loader">
  <div class="loader-container">
    <!-- MAIN LOGO SPINNER -->
    <div class="loader-logo">
      <i class="fas fa-chart-line"></i>
      <h3>Finovex</h3>
    </div>

    <!-- ANIMATED PROGRESS BAR -->
    <div class="progress-container">
      <div class="progress-bar">
        <div class="progress-fill"></div>
      </div>
      <span class="progress-text">Loading...</span>
    </div>

    <!-- ANIMATED DOTS -->
    <div class="loading-dots">
      <span></span>
      <span></span>
      <span></span>
    </div>

    <!-- STATUS TEXT -->
    <div class="loader-status">
      <span class="status-text">Initializing Trading Dashboard</span>
    </div>
  </div>
</div>

<script>
  class PageLoader {
    constructor() {
      this.loader = document.getElementById("pageLoader");
      this.progressBar = document.querySelector(".progress-fill");
      this.progressText = document.querySelector(".progress-text");
      this.statusText = document.querySelector(".status-text");

      this.init();
    }

    // INITIALIZE ON PAGE LOAD
    init() {
      // Show only once on full page load
      this.show();
      window.addEventListener("load", () => {
        setTimeout(() => this.hide(), 800);
      });

      // Intercept form submissions & navigation only
      this.monitorUserActions();

      // Rotate status text messages
      this.updateStatusMessages();
    }

    // SHOW / HIDE
    show() {
      this.loader.classList.remove("hidden");
      document.body.style.overflow = "hidden";
    }

    hide() {
      this.loader.classList.add("hidden");
      document.body.style.overflow = "";
    }

    // âœ… ONLY show loader for *major* user actions
    monitorUserActions() {
      // FORM SUBMITS
      document.addEventListener("submit", (e) => {
        if (!e.target.closest(".no-loader")) {
          this.show();
        }
      });

      // LINK NAVIGATION
      document.addEventListener("click", (e) => {
        const link = e.target.closest("a[href]");
        if (
          link &&
          !link.href.includes("#") &&
          !link.classList.contains("no-loader") &&
          !link.target // ignore target="_blank"
        ) {
          this.show();
        }
      });
    }

    // STATUS MESSAGES
    updateStatusMessages() {
      const messages = [
        "Initializing Trading Dashboard",
        "Loading Market Data",
        "Connecting to Exchange",
        "Preparing Wallet",
        "Finalizing Security",
        "Ready to Trade!",
      ];
      let index = 0;
      const interval = setInterval(() => {
        this.statusText.textContent = messages[index];
        index = (index + 1) % messages.length;
      }, 2000);

      this.loader.addEventListener("transitionend", () => {
        if (this.loader.classList.contains("hidden")) {
          clearInterval(interval);
        }
      });
    }

    // MANUAL CONTROL (optional)
    static showLoader() {
      document.getElementById("pageLoader").classList.remove("hidden");
    }

    static hideLoader() {
      document.getElementById("pageLoader").classList.add("hidden");
    }
  }

  // INIT
  document.addEventListener("DOMContentLoaded", () => new PageLoader());

  // GLOBAL ACCESS
  window.showLoader = () => PageLoader.showLoader();
  window.hideLoader = () => PageLoader.hideLoader();
</script>
